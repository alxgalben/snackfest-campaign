"use strict";function _typeof(obj) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {return typeof obj;} : function (obj) {return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;}, _typeof(obj);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);Object.defineProperty(Constructor, "prototype", { writable: false });return Constructor;}function _toPropertyKey(arg) {var key = _toPrimitive(arg, "string");return _typeof(key) === "symbol" ? key : String(key);}function _toPrimitive(input, hint) {if (_typeof(input) !== "object" || input === null) return input;var prim = input[Symbol.toPrimitive];if (prim !== undefined) {var res = prim.call(input, hint || "default");if (_typeof(res) !== "object") return res;throw new TypeError("@@toPrimitive must return a primitive value.");}return (hint === "string" ? String : Number)(input);}var FormHandler = /*#__PURE__*/function () {

  function FormHandler() {_classCallCheck(this, FormHandler);
    this.init();
    this.handleDOM();
    this.handleEvents();
  }

  /**
   * Declare global variables
   */_createClass(FormHandler, [{ key: "init", value:
    function init() {
    }

    /**
     * Handle DOM queries
     */ }, { key: "handleDOM", value:
    function handleDOM() {
      this.form = $("#registerForm");
      this.formSubmit = $('#form-submit');
      this.formAction = $(".form-action");
      this.phoneInput = $('#phone');
      this.storeInput = $("#store");
      this.receiptInput = $('#receiptNumber');
      this.dateInput = $('#date');
      this.rulesInput = $('#rule');
      this.termsInput = $('#terms');
      this.ageInput = $('#age');
      this.modal = $("#errorModal");
      this.errorDiv = $(".error-messages");
      this.receiptModal = $('#receiptModal');
      this.formWrapper = $(".form-wrapper");
      this.store = $("#store");
      this.info = $(".open-receipt-modal");
      this.infoWrapperMobile = $(".info-wrapper-mobile");
      this.closeReceipt = $(".closeModal");
      this.closeReceiptBootstrap = $(".closeModalBootstrap");
      this.receiptModalBootstrap = $('#receiptModalBootstrap');
      this.modalResponse = $("#modalForm");
      this.closeModalForm = $(".closeModal");
      this.closeModal = $(".close-modal");
      this.messageModal = $("#messageModal");
      this.iconSuccess = $(".success");
      this.iconVoucher = $(".voucher");
      this.iconCamera = $(".camera");
      this.iconDouble = $(".double");
      this.iconBlockedCorrect = $(".blocked-correct");
      this.iconBlockedCorrectLastWeek = $(".blocked-correct-last-week");
      this.iconPostCampanie = $(".post-campanie");
    }

    /**
     * Listen for events
     */ }, { key: "handleEvents", value:
    function handleEvents() {

      var self = this;
      var local = true;

      var imagesBon = [
      {
        name: 'carrefour',
        image: "".concat(absolutePath, "/bonuri/Carrefour.png")
      }, {
        name: 'cora',
        image: "".concat(absolutePath, "/bonuri/Cora.png")
      },
      {
        name: 'kaufland',
        image: "".concat(absolutePath, "/bonuri/Kaufland.png")
      },
      {
        name: 'mega',
        image: "".concat(absolutePath, "/bonuri/Mega-Image.png")
      },
      {
        name: 'metro',
        image: "".concat(absolutePath, "/bonuri/Metro.png")
      },
      {
        name: 'penny',
        image: "".concat(absolutePath, "/bonuri/Penny.png")
      },
      {
        name: 'profi',
        image: "".concat(absolutePath, "/bonuri/Profi.png")
      },
      {
        name: 'selgros',
        image: "".concat(absolutePath, "/bonuri/Selgros.png")
      },
      {
        name: 'altele',
        image: "".concat(absolutePath, "/bonuri/Kaufland.png")
      },
      {
        name: '',
        image: "".concat(absolutePath, "/bonuri/Kaufland.png")
      }];


      this.info.on("click", function (e) {
        e.preventDefault();
        self.receiptModal.toggleClass("active");
      });

      this.messageModal.on('hide.bs.modal', function () {
        setTimeout(function (e) {
          self.iconSuccess.removeClass('active');
          self.iconVoucher.removeClass('active');
          self.iconCamera.removeClass('active');
          self.iconDouble.removeClass('active');
          self.iconBlockedCorrect.removeClass('active');
          self.iconBlockedCorrectLastWeek.removeClass('active');
          self.iconPostCampanie.removeClass('active');
        }, 500);
      });

      this.closeModal.on("click", function (e) {
        e.preventDefault();
        setTimeout(function (e) {
          self.iconSuccess.removeClass('active');
          self.iconVoucher.removeClass('active');
          self.iconCamera.removeClass('active');
          self.iconDouble.removeClass('active');
          self.iconBlockedCorrect.removeClass('active');
          self.iconBlockedCorrectLastWeek.removeClass('active');
          self.iconPostCampanie.removeClass('active');
        }, 500);

        self.messageModal.modal("hide");
      });

      this.closeModalForm.on("click", function (e) {
        e.preventDefault();
        self.modalResponse.modal("hide");
      });

      this.closeReceipt.on("click", function (e) {
        e.preventDefault();
        self.receiptModal.toggleClass("active");
      });

      this.closeReceiptBootstrap.on("click", function (e) {
        e.preventDefault();
        self.receiptModalBootstrap.modal('hide');
      });

      // this.infoWrapperMobile.on("click", function (e) {
      //   e.preventDefault();
      //   self.receiptModalBootstrap.modal('show');
      // });

      // this.modalResponse.modal("show");

      /**
       * Add custom rules and validate the form
       */
      $.validator.addMethod("digitsonly", function (value, element) {
        return this.optional(element) || /^[0-9]+$/g.test(value);
      }, "");
      $.validator.addMethod("phoneRO", function (phone_number, element) {
        phone_number = phone_number.replace(/\(|\)|\s+|-/g, "");
        return this.optional(element) || phone_number.length > 9 &&
        phone_number.match(/^(?:(?:07\d{2}\S?\d{3}\S?\d{3}|(21|31)\d{1}\S?\d{3}\S?\d{3}|((2|3)[3-7]\d{1})\S?\d{3}\S?\d{3}|(8|9)0\d{1}\S?\d{3}\S?\d{3}))$/);
      }, "");
      $.validator.addMethod("recipeRegex", function (value, element) {
        return this.optional(element) || /^(?![\s-0]*$)\d{1,25}(?:[\s-]\d{1,25})*$/g.test(value);
      }, "");
      $.validator.addMethod("valueNotEquals", function (value, element, arg) {
        return arg !== value;
      }, "");


      // local time: end campaign date
      // startDate 3 July
      // endDate 13 AUG
      var endCampaignDate = 1691918529; //13 August
      //Start/current date is 1 July
      var currentDate = 1688376129; //3 july

      //testing timestamps
      //End date is 30 June
      // let endCampaignDate = 1688116929;

      //Start/current date is 1 June
      // let currentDate = 1685611329;

      //LIVE timestamps
      var campaignMaxDate = null;
      // let currentDate = Math.floor(Date.now() / 1000);
      // let endCampaignDate = 1676498399;
      if (currentDate <= endCampaignDate) {
        campaignMaxDate = new Date();
      } else {
        campaignMaxDate = new Date(2023, 8 - 1, 13);


        //For testing only
        // campaignMaxDate = new Date(2023, 7, 30);
      }


      this.dateInput.datepicker({
        monthNames: ['Ianuarie', 'Februarie', 'Martie', 'Aprilie', 'Mai', 'Iunie', 'Iulie', 'August', 'Septembrie', 'Octombrie', 'Noiembrie', 'Decembrie'], // set month names
        monthNamesShort: ['Ian', 'Feb', 'Mar', 'Apr', 'Mai', 'Iun', 'Iul', 'Aug', 'Sep', 'Oct', 'Noi', 'Dec'], // set short month names
        dayNames: ['Duminică', 'Luni', 'Marți', 'Miercuri', 'Joi', 'Vineri', 'Sâmbată'], // set days names
        dayNamesShort: ['Dum', 'Lun', 'Mar', 'Mie', 'Joi', 'Vin', 'Sâb'], // set short day names
        dayNamesMin: ['Du', 'Lu', 'Ma', 'Mi', 'Jo', 'Vi', 'Sâ'], // set more short days names
        dateFormat: 'dd/mm/yy',
        minDate: new Date(2023, 7 - 1, 3), //for live
        // minDate: new Date(2023, 6 - 1, 3),
        maxDate: campaignMaxDate,
        orientation: 'bottom'
      });

      // console.log(new Date(2023, 1 - 1, 5));
      // console.log(new Date(2023, 2 - 1, 15));

      this.dateInput.on('change', function (e) {
        $(this).valid();
      });

      this.form.validate({
        rules: {
          phone: {
            digitsonly: true,
            required: true,
            minlength: 10,
            maxlength: 10,
            number: true,
            phoneRO: true
          },
          store: {
            required: true
          },
          receiptNumber: {
            required: true,
            maxlength: 25,
            recipeRegex: true,
            number: false,
            digitsonly: false,
            phoneRO: false
          },
          date: {
            required: true,
            number: false,
            digitsonly: false,
            phoneRO: false
          },
          rule: {
            required: true,
            number: false,
            digitsonly: false,
            phoneRO: false
          },
          terms: {
            required: true,
            number: false,
            digitsonly: false,
            phoneRO: false
          },
          age: {
            required: true,
            number: false,
            digitsonly: false,
            phoneRO: false
          }
        },
        messages: {
          phone: {
            required: 'Numărul de telefon este incomplet',
            minlength: 'Numărul de telefon este incomplet',
            maxlength: 'Trebuie să introduci un număr de telefon valid',
            number: 'Trebuie să introduci un număr de telefon valid',
            digitsonly: 'Trebuie să introduci un număr de telefon valid',
            phoneRO: 'Trebuie să introduci un număr de telefon valid'
          },
          store: {
            required: "Trebuie să selectezi un magazin"
          },
          receiptNumber: {
            required: 'Trebuie să introduci un numar de bon valid',
            maxlength: 'Trebuie să introduci un numar de bon valid',
            recipeRegex: 'Trebuie să introduci un numar de bon valid'
          },
          date: {
            required: 'Trebuie să introduci data bonului fiscal'
          },
          rule: {
            required: 'Trebuie să bifezi că ai citit și că ești de acord cu Regulamentul campaniei'
          },
          terms: {
            required: 'Trebuie să bifezi că ai citit și că ești de acord cu Termenii și condițiile'
          },
          age: {
            required: 'Trebuie să bifezi că declari că ai peste 18 ani'
          }
        },
        errorElement: 'div',
        errorPlacement: function errorPlacement(error, element) {
          error.appendTo(self.errorDiv);
        },
        submitHandler: function submitHandler(form, event) {
          event.preventDefault();
          if ("ga" in window) {
            var tracker = ga.getAll()[0];
            if (tracker) {
              tracker.send("event", 'Sectiune Inscrie-te', "click", 'Click - Trimite Bon');
            }
          }

          jQuery.ajax({
            method: "POST",
            url: "/register-campaign",
            data: $("#registerForm").serialize(),
            cache: false,
            beforeSend: function beforeSend() {
              self.formWrapper.addClass("show-loader");
            },
            success: function success(response) {
              if (response.status) {
                self.resetForm();
                self.resetRecaptcha();
              }
              switch (response.messageStatus) {
                case 'precampanie':
                case 'postcampanie':
                case 'recaptcha':
                  self.displayModal(self.messageModal, response.message, self.iconPostCampanie);
                  break;
                case 'corect':
                  self.displayModal(self.messageModal, response.message, self.iconSuccess);
                  break;
                case 'prize':
                  self.displayModal(self.messageModal, response.message, response.prize == 1 ? self.iconVoucher : self.iconCamera);
                  break;
                case 'blocked_correct':
                  self.displayModal(self.messageModal, response.message, response.isLastWeek ? self.iconBlockedCorrectLastWeek : self.iconBlockedCorrect);
                  break;
                case 'incorect':
                case 'dubla':
                  self.displayModal(self.messageModal, response.message, self.iconDouble);
                  break;
                default:
                  self.displayModal(self.messageModal, response.message, self.iconPostCampanie);
              }
            },
            complete: function complete() {
              self.formWrapper.removeClass("show-loader");
            },
            error: function error() {
              self.errorDiv.html('<p>A intervenit o eroare neprevăzută. Te rugăm să încerci din nou mai târziu.</p>');
            }
          });
        }
      });

      this.storeInput.on('change', function () {
        // On select change, switch image for receipt
        var bonImg = $('#receiptModal img');
        // let bonImgModal = $('#receiptModalBootstrap img');
        var option = $(this).val();

        for (var i = 0; i < imagesBon.length; i++) {
          if (option === imagesBon[i].name) {
            bonImg.attr('src', imagesBon[i].image);
            // bonImgModal.attr('src', imagesBon[i].image);
          }
        }
      });
    }

    /**
     * Function of reseting form
     */ }, { key: "resetForm", value:
    function resetForm() {
      this.phoneInput.val('');
      this.store.val('');
      this.receiptInput.val('');
      this.dateInput.val('');
      this.rulesInput.prop('checked', false);
      this.rulesInput.attr('checked', false);
      this.termsInput.prop('checked', false);
      this.termsInput.attr('checked', false);
      this.ageInput.prop('checked', false);
      this.ageInput.attr('checked', false);
    } }, { key: "displayModal", value:


    function displayModal(modalObj, message) {var icon = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
      if (null !== icon) {
        icon.addClass('active');
      }

      modalObj.find(".response").html(message);
      modalObj.modal('show');
    } }, { key: "resetRecaptcha", value:

    /**
     * Function of resetting recaptcha
     */
    function resetRecaptcha() {
      setTimeout(function () {
        // reset captcha
        grecaptcha.reset();
      }, 500);
    } }]);return FormHandler;}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,

"use strict";function _typeof(obj) {"@babel/helpers - typeof";return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {return typeof obj;} : function (obj) {return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;}, _typeof(obj);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);Object.defineProperty(Constructor, "prototype", { writable: false });return Constructor;}function _toPropertyKey(arg) {var key = _toPrimitive(arg, "string");return _typeof(key) === "symbol" ? key : String(key);}function _toPrimitive(input, hint) {if (_typeof(input) !== "object" || input === null) return input;var prim = input[Symbol.toPrimitive];if (prim !== undefined) {var res = prim.call(input, hint || "default");if (_typeof(res) !== "object") return res;throw new TypeError("@@toPrimitive must return a primitive value.");}return (hint === "string" ? String : Number)(input);}var LayoutHandler = /*#__PURE__*/function () {

  function LayoutHandler() {_classCallCheck(this, LayoutHandler);
    this.init();
    this.handleDOM();
    this.handleEvents();
  }

  /**
   * Declare global variables
   */_createClass(LayoutHandler, [{ key: "init", value:
    function init() {

    }

    /**
     * Handle DOM queries
     */ }, { key: "handleDOM", value:
    function handleDOM() {
      this.body = $('body');
      this.hamburgerBtn = $('.hamburger');
      this.subMenu = $('.sub-menu');
      this.mainNav = $('.main-nav');
      this.headerSection = $('header');
      this.containerHeader = $('.container-header');
      this.logoSection = $('.logo-section');
      this.eventAction = $('a[data-category]');
    }

    /**
     * Listen for events
     */ }, { key: "handleEvents", value:
    function handleEvents() {
      var self = this;

      // self.toggleSubMenu.on('click', function () {
      //   self.sidebar.toggleClass('active');
      // })

      this.hamburgerBtn.on('click', function () {
        $(this).toggleClass('is-active');
        self.mainNav.toggleClass('is-active');
        self.body.toggleClass('overflow-hidden');
        self.headerSection.toggleClass('burger-active');
        self.subMenu.removeClass('active');
        self.containerHeader.toggleClass('is-active');
        self.logoSection.toggleClass('hidden');
      });

      if (this.eventAction.length > 0) {
        this.eventAction.on('click tap', function () {
          var category = $(this).attr('data-category');
          var label = $(this).attr('data-label');
          self.performanceEvent(category, label);
        });
      }

      //Testing purposes only
      // if($('.register').length > 0) {
      //   $('#messageModal').modal('show');
      // }

    } }, { key: "performanceEvent", value:

    function performanceEvent(category, label) {
      if ("ga" in window) {
        var tracker = ga.getAll()[0];
        if (tracker) {
          tracker.send("event", category, "click", label);
        }
      }
    } }]);return LayoutHandler;}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTGF5b3V0SGFuZGxlci5qcyIsIm5hbWVzIjpbIkxheW91dEhhbmRsZXIiLCJfY2xhc3NDYWxsQ2hlY2siLCJpbml0IiwiaGFuZGxlRE9NIiwiaGFuZGxlRXZlbnRzIiwiX2NyZWF0ZUNsYXNzIiwia2V5IiwidmFsdWUiLCJib2R5IiwiJCIsImhhbWJ1cmdlckJ0biIsInN1Yk1lbnUiLCJtYWluTmF2IiwiaGVhZGVyU2VjdGlvbiIsImNvbnRhaW5lckhlYWRlciIsImxvZ29TZWN0aW9uIiwiZXZlbnRBY3Rpb24iLCJzZWxmIiwib24iLCJ0b2dnbGVDbGFzcyIsInJlbW92ZUNsYXNzIiwibGVuZ3RoIiwiY2F0ZWdvcnkiLCJhdHRyIiwibGFiZWwiLCJwZXJmb3JtYW5jZUV2ZW50Iiwid2luZG93IiwidHJhY2tlciIsImdhIiwiZ2V0QWxsIiwic2VuZCJdLCJzb3VyY2VzIjpbIkxheW91dEhhbmRsZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgTGF5b3V0SGFuZGxlciB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgdGhpcy5pbml0KCk7XHJcbiAgICB0aGlzLmhhbmRsZURPTSgpO1xyXG4gICAgdGhpcy5oYW5kbGVFdmVudHMoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIERlY2xhcmUgZ2xvYmFsIHZhcmlhYmxlc1xyXG4gICAqL1xyXG4gIGluaXQoKSB7XHJcblxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogSGFuZGxlIERPTSBxdWVyaWVzXHJcbiAgICovXHJcbiAgaGFuZGxlRE9NKCkge1xyXG4gICAgdGhpcy5ib2R5ID0gJCgnYm9keScpO1xyXG4gICAgdGhpcy5oYW1idXJnZXJCdG4gPSAkKCcuaGFtYnVyZ2VyJyk7XHJcbiAgICB0aGlzLnN1Yk1lbnUgPSAkKCcuc3ViLW1lbnUnKTtcclxuICAgIHRoaXMubWFpbk5hdiA9ICQoJy5tYWluLW5hdicpO1xyXG4gICAgdGhpcy5oZWFkZXJTZWN0aW9uID0gJCgnaGVhZGVyJyk7XHJcbiAgICB0aGlzLmNvbnRhaW5lckhlYWRlciA9ICQoJy5jb250YWluZXItaGVhZGVyJyk7XHJcbiAgICB0aGlzLmxvZ29TZWN0aW9uID0gJCgnLmxvZ28tc2VjdGlvbicpO1xyXG4gICAgdGhpcy5ldmVudEFjdGlvbiA9ICQoJ2FbZGF0YS1jYXRlZ29yeV0nKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIExpc3RlbiBmb3IgZXZlbnRzXHJcbiAgICovXHJcbiAgaGFuZGxlRXZlbnRzKCkge1xyXG4gICAgbGV0IHNlbGYgPSB0aGlzO1xyXG5cclxuICAgIC8vIHNlbGYudG9nZ2xlU3ViTWVudS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyAgIHNlbGYuc2lkZWJhci50b2dnbGVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAvLyB9KVxyXG5cclxuICAgIHRoaXMuaGFtYnVyZ2VyQnRuLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgJCh0aGlzKS50b2dnbGVDbGFzcygnaXMtYWN0aXZlJyk7XHJcbiAgICAgIHNlbGYubWFpbk5hdi50b2dnbGVDbGFzcygnaXMtYWN0aXZlJyk7XHJcbiAgICAgIHNlbGYuYm9keS50b2dnbGVDbGFzcygnb3ZlcmZsb3ctaGlkZGVuJyk7XHJcbiAgICAgIHNlbGYuaGVhZGVyU2VjdGlvbi50b2dnbGVDbGFzcygnYnVyZ2VyLWFjdGl2ZScpO1xyXG4gICAgICBzZWxmLnN1Yk1lbnUucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICBzZWxmLmNvbnRhaW5lckhlYWRlci50b2dnbGVDbGFzcygnaXMtYWN0aXZlJyk7XHJcbiAgICAgIHNlbGYubG9nb1NlY3Rpb24udG9nZ2xlQ2xhc3MoJ2hpZGRlbicpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgaWYgKHRoaXMuZXZlbnRBY3Rpb24ubGVuZ3RoID4gMCkge1xyXG4gICAgICB0aGlzLmV2ZW50QWN0aW9uLm9uKCdjbGljayB0YXAnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgbGV0IGNhdGVnb3J5ID0gJCh0aGlzKS5hdHRyKCdkYXRhLWNhdGVnb3J5Jyk7XHJcbiAgICAgICAgbGV0IGxhYmVsID0gJCh0aGlzKS5hdHRyKCdkYXRhLWxhYmVsJyk7XHJcbiAgICAgICAgc2VsZi5wZXJmb3JtYW5jZUV2ZW50KGNhdGVnb3J5LCBsYWJlbCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vVGVzdGluZyBwdXJwb3NlcyBvbmx5XHJcbiAgICAvLyBpZigkKCcucmVnaXN0ZXInKS5sZW5ndGggPiAwKSB7XHJcbiAgICAvLyAgICQoJyNtZXNzYWdlTW9kYWwnKS5tb2RhbCgnc2hvdycpO1xyXG4gICAgLy8gfVxyXG5cclxuICB9XHJcblxyXG4gIHBlcmZvcm1hbmNlRXZlbnQoY2F0ZWdvcnksIGxhYmVsKSB7XHJcbiAgICBpZiAoXCJnYVwiIGluIHdpbmRvdykge1xyXG4gICAgICBsZXQgdHJhY2tlciA9IGdhLmdldEFsbCgpWzBdO1xyXG4gICAgICBpZiAodHJhY2tlcikge1xyXG4gICAgICAgIHRyYWNrZXIuc2VuZChcImV2ZW50XCIsIGNhdGVnb3J5LCBcImNsaWNrXCIsIGxhYmVsKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXSwibWFwcGluZ3MiOiIwakRBQU1BLGFBQWE7O0VBRWpCLFNBQUFBLGNBQUEsRUFBYyxDQUFBQyxlQUFBLE9BQUFELGFBQUE7SUFDWixJQUFJLENBQUNFLElBQUksQ0FBQyxDQUFDO0lBQ1gsSUFBSSxDQUFDQyxTQUFTLENBQUMsQ0FBQztJQUNoQixJQUFJLENBQUNDLFlBQVksQ0FBQyxDQUFDO0VBQ3JCOztFQUVBO0FBQ0Y7QUFDQSxLQUZFQyxZQUFBLENBQUFMLGFBQUEsS0FBQU0sR0FBQSxVQUFBQyxLQUFBO0lBR0EsU0FBQUwsS0FBQSxFQUFPOztJQUVQOztJQUVBO0FBQ0Y7QUFDQSxPQUZFLE1BQUFJLEdBQUEsZUFBQUMsS0FBQTtJQUdBLFNBQUFKLFVBQUEsRUFBWTtNQUNWLElBQUksQ0FBQ0ssSUFB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

"use strict"; // init handlers
var layoutHandler = null;
var formHandler = null;

var initHandlers = function initHandlers() {
  layoutHandler = new LayoutHandler();
  formHandler = new FormHandler();
};

// uncomment this to use jQuery
(function ($) {
  $(document).ready(function () {
    initHandlers();
  });
})(jQuery);


// init handlers using vanilla
// document.addEventListener('DOMContentLoaded', () => { initHandlers(); });
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm5hbWVzIjpbImxheW91dEhhbmRsZXIiLCJmb3JtSGFuZGxlciIsImluaXRIYW5kbGVycyIsIkxheW91dEhhbmRsZXIiLCJGb3JtSGFuZGxlciIsIiQiLCJkb2N1bWVudCIsInJlYWR5IiwialF1ZXJ5Il0sInNvdXJjZXMiOlsibWFpbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbml0IGhhbmRsZXJzXHJcbmxldCBsYXlvdXRIYW5kbGVyID0gbnVsbDtcclxubGV0IGZvcm1IYW5kbGVyID0gbnVsbDtcclxuXHJcbmNvbnN0IGluaXRIYW5kbGVycyA9ICgpID0+IHtcclxuICBsYXlvdXRIYW5kbGVyID0gbmV3IExheW91dEhhbmRsZXIoKTtcclxuICBmb3JtSGFuZGxlciA9IG5ldyBGb3JtSGFuZGxlcigpO1xyXG59O1xyXG5cclxuLy8gdW5jb21tZW50IHRoaXMgdG8gdXNlIGpRdWVyeVxyXG4oKCQpID0+IHtcclxuICAkKGRvY3VtZW50KS5yZWFkeSgoKSA9PiB7XHJcbiAgICBpbml0SGFuZGxlcnMoKTtcclxuICB9KTtcclxufSkoalF1ZXJ5KTtcclxuXHJcblxyXG4vLyBpbml0IGhhbmRsZXJzIHVzaW5nIHZhbmlsbGFcclxuLy8gZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpID0+IHsgaW5pdEhhbmRsZXJzKCk7IH0pO1xyXG5cclxuIl0sIm1hcHBpbmdzIjoiY0FBQTtBQUNBLElBQUlBLGFBQWEsR0FBRyxJQUFJO0FBQ3hCLElBQUlDLFdBQVcsR0FBRyxJQUFJOztBQUV0QixJQUFNQyxZQUFZLEdBQUcsU0FBZkEsWUFBWUEsQ0FBQSxFQUFTO0VBQ3pCRixhQUFhLEdBQUcsSUFBSUcsYUFBYSxDQUFDLENBQUM7RUFDbkNGLFdBQVcsR0FBRyxJQUFJRyxXQUFXLENBQUMsQ0FBQztBQUNqQyxDQUFDOztBQUVEO0FBQ0EsQ0FBQyxVQUFDQyxDQUFDLEVBQUs7RUFDTkEsQ0FBQyxDQUFDQyxRQUFRLENBQUMsQ0FBQ0MsS0FBSyxDQUFDLFlBQU07SUFDdEJMLFlBQVksQ0FBQyxDQUFDO0VBQ2hCLENBQUMsQ0FBQztBQUNKLENBQUMsRUFBRU0sTUFBTSxDQUFDOzs7QUFHVjtBQUNBIn0=

//# sourceMappingURL=main.min.js.map
